(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{591:function(t,n,o){"use strict";o.r(n);var e=o(9),c=Object(e.a)({},(function(){var t=this,n=t.$createElement,o=t._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"layout-布局"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#layout-布局"}},[t._v("#")]),t._v(" Layout 布局")]),t._v(" "),o("p",[t._v("栅格化设计是按照一定的规则把页面分成固定的相同宽度，然后列出各种组合的可能性，以便于在进行页面呈现的时候能够快速的进行布局。市面上一般使用 "),o("code",[t._v("12栅格")]),t._v(" 系统，也有采用 "),o("code",[t._v("8栅格")]),t._v(" 系统的，但是随着设备屏幕越来越大，传统的 "),o("code",[t._v("12栅格")]),t._v(" 系统在一些业务场景下，没办法很好的解决元素布局的问题，所以我们使用了 "),o("code",[t._v("24栅格")]),t._v(" 系统。也就是将页面区域 24 等分。")]),t._v(" "),o("demo-block",{attrs:{title:"基础布局",desc:"通过 <code>row</code> 和 <code>col</code> 组件，并通过 <code>col</code> 组件的 <code>span</code> 属性我们就可以自由地组合布局。"}},[o("template",{slot:"demoContent"},[o("qb-row",[o("qb-col",[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",[o("qb-col",{attrs:{span:12}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:12}},[o("grid-content",{attrs:{bg3:""}})],1)],1),t._v(" "),o("qb-row",[o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg3:""}})],1)],1),t._v(" "),o("qb-row",[o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row>\n  <qb-col><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row>\n  <qb-col :span="12"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="12"><grid-content bg3></grid-content></qb-col>\n</qb-row>\n<qb-row>\n  <qb-col :span="8"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="8"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="8"><grid-content bg3></grid-content></qb-col>\n</qb-row>\n<qb-row>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("demo-block",{attrs:{title:"分栏间隔",desc:"<code>rol</code> 组件 提供 <code>gutter</code> 属性来指定每一栏之间的间隔，默认间隔为 0。"}},[o("template",{slot:"demoContent"},[o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg2:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row :gutter="20">\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("demo-block",{attrs:{title:"混合布局",desc:"通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局。"}},[o("template",{slot:"demoContent"},[o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:16}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:8}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:4}},[o("grid-content",{attrs:{bg3:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:5}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:14}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:5}},[o("grid-content",{attrs:{bg2:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row :gutter="20">\n  <qb-col :span="16"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="8"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row :gutter="20">\n  <qb-col :span="8"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="8"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="4"><grid-content bg3></grid-content></qb-col>\n</qb-row>\n<qb-row :gutter="20">\n  <qb-col :span="5"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="14"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="5"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("demo-block",{attrs:{title:"分栏偏移",desc:"使用 <code>offset</code> 属性来偏移指定的栏数。"}},[o("template",{slot:"demoContent"},[o("qb-row",{attrs:{gutter:24}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6,offset:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:10,offset:6}},[o("grid-content",{attrs:{bg3:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{span:6,offset:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6,offset:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row :gutter="24">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6" :offset="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row :gutter="20">\n  <qb-col :span="10" :offset="6"><grid-content bg3></grid-content></qb-col>\n</qb-row>\n<qb-row :gutter="20">\n  <qb-col :span="6" :offset="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6" :offset="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("demo-block",{attrs:{title:"对齐方式",desc:"通过 <code>flex</code> 布局来对分栏进行灵活的对齐。<br/>将 <code>type</code> 属性赋值为 <code>flex</code>，可以启用 <code>flex</code> 布局，并可通过 <code>justify</code> 属性来指定 <code>start</code>, <code>center</code>, <code>end</code>, <code>space-between</code>, <code>space-around</code> 其中的值来定义子元素的排版方式。"}},[o("template",{slot:"demoContent"},[o("qb-row",{attrs:{type:"flex"}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{type:"flex",justify:"center"}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{type:"flex",justify:"end"}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{type:"flex",justify:"space-between"}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1),t._v(" "),o("qb-row",{attrs:{type:"flex",justify:"space-around"}},[o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{span:6}},[o("grid-content",{attrs:{bg2:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row type="flex">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row type="flex" justify="center">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row type="flex" justify="end">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row type="flex" justify="space-between">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n<qb-row type="flex" justify="space-around">\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg3></grid-content></qb-col>\n  <qb-col :span="6"><grid-content bg2></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("demo-block",{attrs:{title:"响应式布局",desc:"参照了 <a href='https://getbootstrap.com/docs/4.3/layout/overview/#responsive-breakpoints'>Bootstrap</a> 的 响应式设计，预设了四个响应尺寸：<code>sm:768px</code>、<code>md:992px</code>、<code>lg:1200px</code>、<code>xl:1920px</code>"}},[o("template",{slot:"demoContent"},[o("qb-row",{attrs:{gutter:20}},[o("qb-col",{attrs:{xs:8,sm:6,md:4,lg:3,xl:1}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{xs:4,sm:6,md:8,lg:9,xl:11}},[o("grid-content",{attrs:{bg3:""}})],1),t._v(" "),o("qb-col",{attrs:{xs:4,sm:6,md:8,lg:9,xl:11}},[o("grid-content",{attrs:{bg2:""}})],1),t._v(" "),o("qb-col",{attrs:{xs:8,sm:6,md:4,lg:3,xl:1}},[o("grid-content",{attrs:{bg3:""}})],1)],1)],1),t._v(" "),o("highlight-code",{attrs:{slot:"codeText",lang:"html"},slot:"codeText"},[o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[t._v('<qb-row :gutter="20">\n  <qb-col :xs="8" :sm="6" :md="4" :lg="3" :xl="1"><grid-content bg2></grid-content></qb-col>\n  <qb-col :xs="4" :sm="6" :md="8" :lg="9" :xl="11"><grid-content bg3></grid-content></qb-col>\n  <qb-col :xs="4" :sm="6" :md="8" :lg="9" :xl="11"><grid-content bg2></grid-content></qb-col>\n  <qb-col :xs="8" :sm="6" :md="4" :lg="3" :xl="1"><grid-content bg3></grid-content></qb-col>\n</qb-row>\n')])])])])],2),t._v(" "),o("h3",{attrs:{id:"参数说明"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[t._v("#")]),t._v(" 参数说明")]),t._v(" "),o("p",[o("strong",[t._v("Row 组件参数")])]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("参数")]),t._v(" "),o("th",[t._v("说明")]),t._v(" "),o("th",[t._v("类型")]),t._v(" "),o("th",[t._v("可选值")]),t._v(" "),o("th",[t._v("默认值")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("gutter")]),t._v(" "),o("td",[t._v("栅格间隔")]),t._v(" "),o("td",[t._v("number")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("0")])]),t._v(" "),o("tr",[o("td",[t._v("type")]),t._v(" "),o("td",[t._v("布局模式，可选 flex，现代浏览器下有效")]),t._v(" "),o("td",[t._v("string")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("justify")]),t._v(" "),o("td",[t._v("flex 布局下的水平排列方式")]),t._v(" "),o("td",[t._v("string")]),t._v(" "),o("td",[t._v("start/end/center/space-around/space-between")]),t._v(" "),o("td",[t._v("start")])]),t._v(" "),o("tr",[o("td",[t._v("align")]),t._v(" "),o("td",[t._v("flex 布局下的垂直排列方式")]),t._v(" "),o("td",[t._v("string")]),t._v(" "),o("td",[t._v("top/middle/bottom")]),t._v(" "),o("td",[t._v("top")])]),t._v(" "),o("tr",[o("td",[t._v("tag")]),t._v(" "),o("td",[t._v("自定义元素标签")]),t._v(" "),o("td",[t._v("string")]),t._v(" "),o("td",[t._v("*")]),t._v(" "),o("td",[t._v("div")])])])]),t._v(" "),o("p",[o("strong",[t._v("Col 组件参数")])]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("参数")]),t._v(" "),o("th",[t._v("说明")]),t._v(" "),o("th",[t._v("类型")]),t._v(" "),o("th",[t._v("可选值")]),t._v(" "),o("th",[t._v("默认值")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("span")]),t._v(" "),o("td",[t._v("栅格占据的列数")]),t._v(" "),o("td",[t._v("number")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("24")])]),t._v(" "),o("tr",[o("td",[t._v("offset")]),t._v(" "),o("td",[t._v("栅格左侧的间隔格数")]),t._v(" "),o("td",[t._v("number")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("0")])]),t._v(" "),o("tr",[o("td",[t._v("push")]),t._v(" "),o("td",[t._v("栅格向右移动格数")]),t._v(" "),o("td",[t._v("number")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("0")])]),t._v(" "),o("tr",[o("td",[t._v("pull")]),t._v(" "),o("td",[t._v("栅格向左移动格数")]),t._v(" "),o("td",[t._v("number")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("0")])]),t._v(" "),o("tr",[o("td",[t._v("xs")]),t._v(" "),o("td",[o("code",[t._v("<768px")]),t._v(" 响应式栅格数或者栅格属性对象")]),t._v(" "),o("td",[t._v("number/object (例如： {span: 4, offset: 4})")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("sm")]),t._v(" "),o("td",[o("code",[t._v("≥768px")]),t._v(" 响应式栅格数或者栅格属性对象")]),t._v(" "),o("td",[t._v("number/object (例如： {span: 4, offset: 4})")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("md")]),t._v(" "),o("td",[o("code",[t._v("≥992px")]),t._v(" 响应式栅格数或者栅格属性对象")]),t._v(" "),o("td",[t._v("number/object (例如： {span: 4, offset: 4})")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("lg")]),t._v(" "),o("td",[o("code",[t._v("≥1200px")]),t._v(" 响应式栅格数或者栅格属性对象")]),t._v(" "),o("td",[t._v("number/object (例如： {span: 4, offset: 4})")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("xl")]),t._v(" "),o("td",[o("code",[t._v("≥1920px")]),t._v(" 响应式栅格数或者栅格属性对象")]),t._v(" "),o("td",[t._v("number/object (例如： {span: 4, offset: 4})")]),t._v(" "),o("td",[t._v("—")]),t._v(" "),o("td",[t._v("—")])]),t._v(" "),o("tr",[o("td",[t._v("tag")]),t._v(" "),o("td",[t._v("自定义元素标签")]),t._v(" "),o("td",[t._v("string")]),t._v(" "),o("td",[t._v("*")]),t._v(" "),o("td",[t._v("div")])])])])],1)}),[],!1,null,null,null);n.default=c.exports}}]);